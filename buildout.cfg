[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-4.3.x.cfg
    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
    https://raw.github.com/plone/plone.app.robotframework/master/versions.cfg

package-name = collective.behavior.featuredimage
package-extras = [test]

parts +=
    env
    code-analysis
    createcoverage
    i18ndude
    omelette
    node
    rebuild_i18n-sh
    rebuild_bower
    rebuild_npm
    grunt_build
    grunt_dev
    grunt_serve
    grunt_jshint
    grunt_test
    run_rebuild_bower
    run_rebuild_npm

[env]
recipe = collective.recipe.environment

[instance]
environment-vars +=
    PATH ${buildout:bin-directory}:${env:PATH}

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/collective/behavior/featuredimage
pre-commit-hook = True
flake8-ignore = E501
clean-lines = True
clean-lines-exclude = ${buildout:directory}/src/collective/behavior/featuredimage/static
deprecated-aliases = True
imports = False
prefer-single-quotes = True
return-status-codes = True
utf8-header = True
# jshint don't make sense with yeoman
jshint = False
# csslint don't make sense with yeoman
csslint = False

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}

[test]
defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress', '--path', '${buildout:bin-directory}:${env:PATH}']

[versions]
# use latest version of coverage and setuptools
coverage =
setuptools =

[node]
version = 4.0.0
npms = yo npm bower grunt-cli phantomjs-prebuilt csscomb jshint
scripts = yo npm bower grunt phantomjs csscomb jshint

[rebuild_bower]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    PATH=${buildout:bin-directory}:$PATH
    cd yeoman
    rm -rf app/bower_components
    bower install --config.interactive=false
output = ${buildout:bin-directory}/rebuild_bower
mode = 755

[rebuild_npm]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    PATH=${buildout:bin-directory}:$PATH
    cd yeoman
    rm -rf node_modules
    npm install
output = ${buildout:bin-directory}/rebuild_npm
mode = 755

[grunt_build]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    PATH=${buildout:bin-directory}:$PATH
    cd yeoman
    grunt build
output = ${buildout:bin-directory}/grunt_build
mode = 755

[grunt_dev]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    PATH=${buildout:bin-directory}:$PATH
    cd yeoman
    grunt dev
output = ${buildout:bin-directory}/grunt_dev
mode = 755

[grunt_serve]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    PATH=${buildout:bin-directory}:$PATH
    cd yeoman
    grunt serve
output = ${buildout:bin-directory}/grunt_serve
mode = 755

[grunt_jshint]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    PATH=${buildout:bin-directory}:$PATH
    cd yeoman
    grunt jshint
output = ${buildout:bin-directory}/grunt_jshint
mode = 755

[grunt_test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    PATH=${buildout:bin-directory}:$PATH
    cd yeoman
    grunt test
output = ${buildout:bin-directory}/grunt_test
mode = 755

[run_rebuild_bower]
recipe = plone.recipe.command
command = ${buildout:bin-directory}/rebuild_bower
update-command = command

[run_rebuild_npm]
recipe = plone.recipe.command
command = ${buildout:bin-directory}/rebuild_npm
update-command = command
